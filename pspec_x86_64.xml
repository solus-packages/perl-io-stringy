<PISI>
    <Source>
        <Name>perl-io-stringy</Name>
        <Packager>
            <Name>Simon Friend</Name>
            <Email>simbiotiqu@gmail.com</Email>
        </Packager>
        <License>Artistic-1.0-Perl</License>
        <PartOf>programming.perl</PartOf>
        <Summary xml:lang="en">IO-stringy - I/O on in-core objects like strings and arrays</Summary>
        <Description xml:lang="en">This toolkit primarily provides modules for performing both traditional and object-oriented i/o) on things *other* than normal filehandles; in particular, IO::Scalar, IO::ScalarArray, and IO::Lines. In the more-traditional IO::Handle front, we have IO::AtomicFile which may be used to painlessly create files which are updated atomically. And in the &quot;this-may-prove-useful&quot; corner, we have IO::Wrap, whose exported wraphandle() function will clothe anything that&apos;s not a blessed object in an IO::Handle-like wrapper... so you can just use OO syntax and stop worrying about whether your function&apos;s caller handed you a string, a globref, or a FileHandle.
</Description>
        <Archive type="binary" sha1sum="79eb0752a961b8e0d15c77d298c97498fbc89c5a">https://solus-project.com/sources/README.Solus</Archive>
    </Source>
    <Package>
        <Name>perl-io-stringy</Name>
        <Summary xml:lang="en">IO-stringy - I/O on in-core objects like strings and arrays</Summary>
        <Description xml:lang="en">This toolkit primarily provides modules for performing both traditional and object-oriented i/o) on things *other* than normal filehandles; in particular, IO::Scalar, IO::ScalarArray, and IO::Lines. In the more-traditional IO::Handle front, we have IO::AtomicFile which may be used to painlessly create files which are updated atomically. And in the &quot;this-may-prove-useful&quot; corner, we have IO::Wrap, whose exported wraphandle() function will clothe anything that&apos;s not a blessed object in an IO::Handle-like wrapper... so you can just use OO syntax and stop worrying about whether your function&apos;s caller handed you a string, a globref, or a FileHandle.
</Description>
        <PartOf>programming.perl</PartOf>
        <Files>
            <Path fileType="library">/usr/lib64/perl5/vendor_perl/5.26/IO/AtomicFile.pm</Path>
            <Path fileType="library">/usr/lib64/perl5/vendor_perl/5.26/IO/InnerFile.pm</Path>
            <Path fileType="library">/usr/lib64/perl5/vendor_perl/5.26/IO/Lines.pm</Path>
            <Path fileType="library">/usr/lib64/perl5/vendor_perl/5.26/IO/Scalar.pm</Path>
            <Path fileType="library">/usr/lib64/perl5/vendor_perl/5.26/IO/ScalarArray.pm</Path>
            <Path fileType="library">/usr/lib64/perl5/vendor_perl/5.26/IO/Stringy.pm</Path>
            <Path fileType="library">/usr/lib64/perl5/vendor_perl/5.26/IO/Wrap.pm</Path>
            <Path fileType="library">/usr/lib64/perl5/vendor_perl/5.26/IO/WrapTie.pm</Path>
            <Path fileType="library">/usr/lib64/perl5/vendor_perl/5.26/x86_64-linux-thread-multi/auto/IO/Stringy/.packlist</Path>
            <Path fileType="man">/usr/share/man</Path>
        </Files>
    </Package>
    <History>
        <Update release="1">
            <Date>2018-01-20</Date>
            <Version>2.111</Version>
            <Comment>Packaging update</Comment>
            <Name>Simon Friend</Name>
            <Email>simbiotiqu@gmail.com</Email>
        </Update>
    </History>
</PISI>